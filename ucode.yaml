# Microcode RAM data description
#
# Copyright (c) 2024 David Hunter
#
# This program is GPL licensed. See COPYING for the full license.

types:
  - name: e_uaddr
    desc: ucode address
    type: enum
    width: 7
    prefix: UA_
    # values will come from the rows list

  - name: e_ubm
    desc: branch mode
    type: enum
    width: 2
    prefix: UBM_
    values:
      - ADV                     # advance (default)
      - END                     # return to IDLE
      - DA                      # direct address

  - name: e_mcy
    desc: machine cycle
    type: enum
    width: 2
    prefix: UTX_
    values:
      - T1
      - T2
      - T3
      - T4

  - name: e_urfs
    desc: register file select
    type: enum
    width: 4
    prefix: URFS_
    values:
      - A
      - V
      - B
      - C
      - D
      - E
      - H
      - L
      - SPL
      - SPH
      - PCL
      - PCH

  - name: e_idbs
    desc: idb select
    type: enum
    width: 3
    prefix: UIDBS_
    values:
      - 0                       # zero
      - RF                      # register file: A, B, etc.
      - IDL                     # internal data latch
      - IR5                     # IR[4:0] (for JR)
      - CO                      # ALU output

  - name: e_lts
    desc: load target select
    type: enum
    width: 4
    prefix: ULTS_
    values:
      - NONE                    # (default) no load
      - RF
      - DOR
      - AI
      - BI
      - IE

  - name: e_aluop
    desc: ALU operation
    type: enum
    width: 3
    prefix: UAO_
    values:
      - SUM
      - OR
      - AND
      - EOR
      - ASL
      - ROL
      - LSR
      - ROR

  - name: e_cis
    desc: ALU carry in select
    type: enum
    width: 2
    prefix: UCIS_
    values:
      - 0
      - 1
      - CO
      - PSW_CY

columns:
  - name: bm
    type: e_ubm
    desc: branch mode
  - name: nua
    type: e_uaddr
    desc: next address
  - name: idx
    width: 3
    desc: general-purpose data
  - name: rfs
    type: e_urfs
    desc: register file select
  - name: idbs
    type: e_idbs
    desc: idb select
  - name: lts
    type: e_lts
    desc: load target select
  - name: m1
    width: 1
    desc: Fetch next opcode (start M1)
  - name: pc_inc
    width: 1
    desc: increment PC
  - name: pc_ab
    width: 1
    desc: pc -> ab
  - name: aluop
    type: e_aluop
    desc: ALU operation
  - name: cis
    type: e_cis
    desc: ALU carry in select

rows:
  - addr: IDLE
    bm: DA
    nua: IDLE

  - addr: DI
    at: 0x124                   # prefix 0x48
    m1_overlap: 1
    idx: 0
    lts: IE
    bm: END

  - addr: EI
    at: 0x120                   # prefix 0x48
    m1_overlap: 1
    idx: 1
    lts: IE
    bm: END

  - addr: JR_C1_T1
    at: [ 0xC0, 0xDF ]
    # PCL -> idb -> AI
    rfs: PCL
    idbs: RF
    lts: AI
  - addr: JR_C1_T2
    # IR[4:0] -> idb -> BI
    idbs: IR5
    lts: BI
  - addr: JR_C1_T3
    # AI + BI -> CO
    aluop: SUM
    cis: 0
  - addr: JR_C2_T1
    # CO -> idb -> PCL
    idbs: CO
    lts: RF
    rfs: PCL
  - addr: JR_C2_T2
    # PCH -> idb -> AI
    rfs: PCH
    idbs: RF
    lts: AI
  - addr: JR_C2_T3
    # 0 -> idb -> BI
    idbs: 0
    lts: BI
  - addr: JR_C3_T1
    # AI + BI -> CO
    aluop: SUM
    cis: 0
  - addr: JR_C3_T2
    # CO -> idb -> PCH
    idbs: CO
    lts: RF
    rfs: PCH
  - addr: JR_C3_T3
    bm: END
    m1: 1

  - addr: LXI_B_C1_T1
    at: 0x14                    # LXI BC, bbaa
    pc_ab: 1
  - addr: LXI_B_C1_T2
  - addr: LXI_B_C1_T3
    # IDL -> idb -> B
    idbs: IDL
    rfs: B
    lts: RF
    pc_inc: 1
  - addr: LXI_B_C2_T1
    pc_ab: 1
  - addr: LXI_B_C2_T2
  - addr: LXI_B_C2_T3
    # IDL -> idb -> C
    idbs: IDL
    rfs: C
    lts: RF
    pc_inc: 1
    bm: END
    m1: 1
